/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas;

import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author FerNando
 */
public class personitas extends javax.swing.JFrame {

    int fila = -1;

    /**
     * Creates new form personitas
     */
    public personitas() {
        initComponents();
        llenadoMalla();
    }

    public void limpiarCajas() {
        Id_persona.setText("");
        nombre.setText("");
        apaterno.setText("");
        amaterno.setText("");
        direccion.setText("");
        telefono.setText("");
        correo.setText("");
    }

    public void llenadoMalla() {
        String[] columnNames = {"IDPERSONITAS", "NOMBRE", "APELLIDO PATERNO", "APELLIDO MATERNO", "DOMICILIO", "TELEFONO", "CORREO"};
        String[] registro = new String[7];
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        try {
            MongoClient mongoClient = new MongoClient("localhost", 27017);
            MongoDatabase database = mongoClient.getDatabase("personitas");
            MongoCollection<Document> coll = database.getCollection("personitas");
            MongoCursor<Document> cursor = coll.find().iterator();
            while (cursor.hasNext()) {
                Document obj = cursor.next();
                String i = (String) String.valueOf(obj.getInteger("id_personita"));
                String nom = (String) obj.get("nombre_p");
                String apa = (String) obj.get("apaterno_p");
                String ama = (String) obj.get("amaterno_p");
                String dom = (String) obj.get("domicilio_p");
                String tel = (String) obj.get("telefono_p");
                String co = (String) obj.get("correo_p");
                ObjectId id = (ObjectId) obj.get("_id");
                model.addRow(new Object[]{i, nom, apa, ama, dom, tel, co});
            }
            t_personas.setModel(model);
            cursor.close();
            mongoClient.close();
        } catch (Exception e) {
            System.err.println("Ocurrio un error: " + e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        apaterno = new javax.swing.JTextField();
        amaterno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Id_persona = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        telefono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        correo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_personas = new javax.swing.JTable();
        Guardar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Actualizar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("DATOS DE PERSONAS");

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido paterno");

        jLabel4.setText("Apellido materno");

        jLabel5.setText("ID Persona");

        jLabel6.setText("Dirección");

        jLabel7.setText("Teléfono");

        jLabel8.setText("Correo");

        t_personas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        t_personas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_personasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(t_personas);

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Guardar)
                                .addGap(18, 18, 18)
                                .addComponent(Buscar)
                                .addGap(18, 18, 18)
                                .addComponent(Actualizar)
                                .addGap(18, 18, 18)
                                .addComponent(Eliminar)
                                .addGap(18, 18, 18)
                                .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(Id_persona, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(nombre))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(apaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(amaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(direccion))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(correo))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel1)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Id_persona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(apaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Guardar)
                    .addComponent(Buscar)
                    .addComponent(Actualizar)
                    .addComponent(Eliminar)
                    .addComponent(Limpiar))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_personasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_personasMouseClicked
        // TODO add your handling code here:
        fila = t_personas.rowAtPoint(evt.getPoint());
        if (fila > -1) {
            /* String id = String.valueOf(tabla1.getValueAt(fila, 0));*/
            Id_persona.setText(String.valueOf(t_personas.getValueAt(fila, 0)));
            nombre.setText(String.valueOf(t_personas.getValueAt(fila, 1)));
            apaterno.setText(String.valueOf(t_personas.getValueAt(fila, 2)));
            amaterno.setText(String.valueOf(t_personas.getValueAt(fila, 3)));
            direccion.setText(String.valueOf(t_personas.getValueAt(fila, 4)));
            telefono.setText(String.valueOf(t_personas.getValueAt(fila, 5)));
            correo.setText(String.valueOf(t_personas.getValueAt(fila, 6)));
        }
    }//GEN-LAST:event_t_personasMouseClicked

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
        String id = this.Id_persona.getText();
        String nombre = this.nombre.getText();
        String apaterno = this.apaterno.getText();
        String amaterno = this.amaterno.getText();
        String telefono = this.telefono.getText();
        String direccion = this.direccion.getText();
        String correo = this.correo.getText();
        try {
            MongoClient mongoClient = new MongoClient("localhost", 27017);
            MongoDatabase database = mongoClient.getDatabase("personitas");
            MongoCollection<Document> coll = database.getCollection("personitas");
            Document document = new Document();
            document.append("id_personita", Integer.parseInt(id));
            document.append("nombre_p", nombre);
            document.append("apaterno_p", apaterno);
            document.append("amaterno_p", amaterno);
            document.append("telefono_p", telefono);
            document.append("domicilio_p", direccion);
            document.append("correo_p", correo);
            coll.insertOne(document);
            limpiarCajas();
            llenadoMalla();
        } catch (Exception e) {
            System.err.println("Ocurrio un error: " + e);
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        String id = this.Id_persona.getText();
        try {
            MongoClient mongoClient = new MongoClient("localhost", 27017);
            MongoDatabase database = mongoClient.getDatabase("personitas");
            MongoCollection<Document> coll = database.getCollection("personitas");
            Document finddDocument = new Document("id_personita", Integer.parseInt(id));
            coll.findOneAndDelete(finddDocument);
            limpiarCajas();
            llenadoMalla();
        } catch (Exception e) {
            System.err.print("Ocurrio un error: " + e);
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCajas();
        llenadoMalla();
    }//GEN-LAST:event_LimpiarActionPerformed

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        // TODO add your handling code here:
        String id = this.Id_persona.getText();
        String nombre = this.nombre.getText();
        String apaterno = this.apaterno.getText();
        String amaterno = this.amaterno.getText();
        String telefono = this.telefono.getText();
        String direccion = this.direccion.getText();
        String correo = this.correo.getText();
        try {
            MongoClient mongoClient = new MongoClient("localhost", 27017);
            MongoDatabase database = mongoClient.getDatabase("personitas");
            MongoCollection<Document> coll = database.getCollection("personitas");
            Document finddDocument = new Document("id_personita", Integer.parseInt(id));
            Document updateDocument = new Document();
            updateDocument.append("id_personita", Integer.parseInt(id));
            updateDocument.append("nombre_p", nombre);
            updateDocument.append("apaterno_p", apaterno);
            updateDocument.append("amaterno_p", amaterno);
            updateDocument.append("telefono_p", telefono);
            updateDocument.append("domicilio_p", direccion);
            updateDocument.append("correo_p", correo);
            Document document = new Document("$set", updateDocument);
            coll.findOneAndUpdate(finddDocument, document);
            limpiarCajas();
            llenadoMalla();
        } catch (Exception e) {
            System.err.print("Ocurrio un error: " + e);
        }
    }//GEN-LAST:event_ActualizarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
        String[] columnNames = {"IDPERSONITAS", "NOMBRE", "APELLIDO PATERNO", "APELLIDO MATERNO", "DOMICILIO", "TELEFONO", "CORREO"};
        String[] registro = new String[7];
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        String id = this.Id_persona.getText();
        try {
            MongoClient mongoClient = new MongoClient("localhost", 27017);
            MongoDatabase database = mongoClient.getDatabase("personitas");
            MongoCollection<Document> coll = database.getCollection("personitas");
            Document finddDocument = new Document("id_personita", Integer.parseInt(id));
            MongoCursor<Document> cursor = coll.find(finddDocument).iterator();
            while (cursor.hasNext()) {
                Document obj = cursor.next();
                String i = (String) String.valueOf(obj.getInteger("id_personita"));
                String nom = (String) obj.get("nombre_p");
                String apa = (String) obj.get("apaterno_p");
                String ama = (String) obj.get("amaterno_p");
                String dom = (String) obj.get("domicilio_p");
                String tel = (String) obj.get("telefono_p");
                String co = (String) obj.get("correo_p");
                model.addRow(new Object[]{i, nom, apa, ama, dom, tel, co});
            }
            t_personas.setModel(model);
        } catch (Exception e) {
            System.err.print("Ocurrio un error: " + e);
        }
    }//GEN-LAST:event_BuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(personitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(personitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(personitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(personitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new personitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Guardar;
    private javax.swing.JTextField Id_persona;
    private javax.swing.JButton Limpiar;
    private javax.swing.JTextField amaterno;
    private javax.swing.JTextField apaterno;
    private javax.swing.JTextField correo;
    private javax.swing.JTextField direccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTable t_personas;
    private javax.swing.JTextField telefono;
    // End of variables declaration//GEN-END:variables
}
